// Generated by CoffeeScript 1.12.6
(function() {
  this.ls = function(location) {
    var div, divs, k, len;
    if (location == null) {
      location = document;
    }
    divs = location.getElementsByTagName('div');
    for (k = 0, len = divs.length; k < len; k++) {
      div = divs[k];
      console.log("Id: " + (div.getAttribute('id')) + ", Class: " + (div.getAttribute('class')));
    }
  };

  $('#parse').on("click", function() {
    var contact, event, events, feature, html, htmlContent, i, k, l, len, len1, len2, m, n, pageType, ref, section, sections, tempHTML;
    pageType = document.getElementById("type-of-page");
    html = document.getElementById("html");
    htmlContent = document.getElementById("html-content");
    if (pageType.value !== "" && html.value !== "") {
      htmlContent.innerHTML = html.value;
      html.value = "";
      tempHTML = "";
      switch (pageType.value) {
        case "video":
          feature = htmlContent.getElementsByClassName('video-feature')[0];
          tempHTML += buildFeature(feature);
          sections = htmlContent.getElementsByClassName('video-section');
          for (k = 0, len = sections.length; k < len; k++) {
            section = sections[k];
            tempHTML += buildSection(section);
          }
          tempHTML += "<br /><button class='btn' id='build-video' onclick='buildVideoHTML()'>Build HTML</button>";
          break;
        case "timeline":
          events = htmlContent.getElementsByClassName('events-content')[0].getElementsByTagName('ol')[0].getElementsByTagName('li');
          for (l = 0, len1 = events.length; l < len1; l++) {
            event = events[l];
            tempHTML += buildEvent(event);
          }
          tempHTML += "<br /><button class='btn' id='build-timeline' onclick='buildTimelineHTML()'>Build HTML</button>";
          break;
        case "vert-timeline":
          tempHTML += buildVertTimeline(document.getElementsByClassName('container')[0]);
          tempHTML += "<br /><button class='btn' id='build-vert-timeline' onclick='buildVertTimelineHTML()'>Build HTML</button>";
          break;
        case "contact-book":
          ref = document.getElementById('contact-list').getElementsByClassName('contact');
          for (m = 0, len2 = ref.length; m < len2; m++) {
            contact = ref[m];
            tempHTML += buildContact(contact);
          }
          tempHTML += "<br /><button class='btn' id='build-contact-book' onclick='buildContactBookHTML()'>Build HTML</button>";
          break;
        default:
          break;
      }
      document.getElementById("input-area").innerHTML = tempHTML;
    } else if (pageType.value === "") {
      alert("Select what type of page!");
    } else {
      htmlContent.innerHTML = html.value;
      html.value = "";
      tempHTML = "";
      switch (pageType.value) {
        case "video":
          tempHTML += "<div style='height: 610px;' class='feature-video champ-card'><h2>Feature Video</h2>";
          for (i = n = 0; n < 4; i = ++n) {
            if (!(i % 2)) {
              tempHTML += "<div style='float: left; margin: 15px; margin-left: 100px;' class='video-entry champ-card'>";
            } else {
              tempHTML += "<div style='float: left; margin: 15px;' class='video-entry champ-card'>";
            }
            if (!i) {
              tempHTML += "<h3>Feature Video Main Video</h3>";
            } else {
              tempHTML += "<h3>Feature Video Preview " + i + "</h3>";
            }
            tempHTML += "<p style='float: left'>URL:</p><input style='float: left' class='video-url'  /><br /><br />" + "<p style='float: left; padding-bottom: 0;'>Thumbnail URL:</p><input style='float: left' class='video-thumb-url'  />" + "<br /><p style='float:left; font-size: 10px; margin-top:0;'>Note: Make sure thumbnail is 16:9</p><br /><br />" + "<p style='float: left'>Description:</p><input style='float: left' class='video-description' maxlength='30'  /></div>";
            if (i % 2) {
              tempHTML += "<br/><br/>";
            }
          }
          tempHTML += "<button style='float: left; margin-left: 20px; margin-top: 10px;' class='btn' onclick='addNewSection(this)'>Add Section</button></div>" + '<br /><button class="btn" id="build-video" onclick="buildVideoHTML()">Build HTML</button>';
          break;
        case "timeline":
          tempHTML += '<div class="event-entry champ-card">' + '<input maxlength="4"><br /><br />' + '<div><textarea></textarea><br />' + '<button class="btn" onclick="newDetail(this)">Add</button>' + '<button class="btn" onclick="removeDetail(this)" style="margin-left: 5px;">Remove</button>' + '<button class="btn" onclick="moveUp(this)" style="margin-left: 5px;">Up</button>' + '<button class="btn" onclick="moveDown(this)" style="margin-left: 5px;">Down</button>' + '<br /><br /></div>' + '<button class="btn" onclick="addEvent(this)">Add Event</button>' + '<button class="btn" onclick="deleteEvent(this)" style="margin-left: 5px;">Remove Event</button>' + '<button class="btn" onclick="moveUp(this)" style="margin-left: 5px;">Up</button>' + '<button class="btn" onclick="moveDown(this)" style="margin-left: 5px;">Down</button>' + '<button class="btn" onclick="addImage(this)" style="margin-left: 5px;">Add Image</button>' + '</div>' + '<br /><button class="btn" id="build-timeline" onclick="buildTimelineHTML()">Build HTML</button>';
          break;
        case "vert-timeline":
          tempHTML += '<br/><button class="btn" onclick="addCoverPhoto(this)">Add Cover Photo</button><br/>' + '<div class="event-element champ-card"><input class="event-element-header" type="text"><br /><br />' + '<div><textarea class="event-element-point"></textarea>' + '<br/><button class="btn" style="margin-left: 5px" onclick="addElement(this)">Add Detail</button>' + '<button class="btn" style="margin-left: 5px" onclick="removeDetail(this)">Remove Detail</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveUp(this)">Move Up</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveDown(this)">Move Down</button>' + '<br/><br/></div>' + '<button class="btn" style="margin-left: 5px" onclick="addTimelineElement(this)">Add Event</button>' + '<button class="btn" style="margin-left: 5px" onclick="deleteEvent(this)">Remove Event</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveUp(this)">Move Up</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveDown(this)">Move Down</button></div>' + '<br /><button class="btn" id="build-timeline" onclick="buildVertTimelineHTML()">Build HTML</button>';
          break;
        case "contact-book":
          tempHTML += '<div class="container champ-card" style="clear: both; width: 100%;">\n' + '  <h2 style="float: left;">\n' + '  Contact Name:\n' + '  </h2>\n' + '  <input type="text" style="float: left; margin-top: -2px; width: 45%; margin-left: 7px; box-sizing: border-box; border: 2px solid #ccc; border-radius: 4px; font-size: 16px; background-color: white;padding: 7px;" maxlength="100">\n' + '  <div class="detail champ-card" style="clear: both; position: relative">\n' + '    <div class="heading-container" style="width: 50%; float: left;">\n' + '      <h2 style="margin-top: 0;">\n' + '      Detail\n' + '      </h2>\n' + '      <h3 style="float: left; margin-top: 0;">\n' + '      Heading:\n' + '      </h3>\n' + '      <input type="text" class="heading" maxlength="18" style="float: left; margin-top: -2px; margin-left: 5px; width: 60%">\n' + '    </div>\n' + '    <div class="detail-options" style="padding: 10px;">\n' + '      <input style="float: left" type="checkbox" onclick="noContactDetailHeading(this)"><p style="margin-top: -4px;">No Heading</p>\n' + '      <input style="float: left" type="checkbox" onclick="contactDetailIsLink(this)"><p style="margin-top: -4px;">Detail is Link</p>\n' + '      <input style="float: left" type="checkbox" onclick="contactDetailIsButton(this)"><p style="margin-top: -4px;">Detail is Button</p>\n' + '    </div>\n' + '    <h3 class="line-header">Lines:</h3>\n' + '    <div class="line-container">\n' + '      <input type="text" maxlength="24" style="width: 45%; border: 1px solid lightgrey; box-sizing: border-box; border: 2px solid #ccc; border-radius: 4px; font-size: 16px; background-color: white;padding: 7px; margin-bottom: 5px;" class="line">\n' + '      <a class="btn" onclick="addContactDetailLine(this)">+</a>\n' + '      <a class="btn" onclick="deleteContactDetailLine(this)">−</a>\n' + '      <a class="btn" onclick="moveUp(this)">↑</a>\n' + '      <a class="btn" onclick="moveDown(this)">↓</a>\n' + '    </div> \n' + '    <p class="disclaimer">* Lines have a 24 character limit for styling purposes</p>' + '    <a class="btn" onclick="addContactDetail(this)">Add Detail</a>\n' + '    <a class="btn" onclick="deleteContactDetail(this)">Delete</a>\n' + '    <a class="btn" onclick="moveUp(this)">Move Up</a>\n' + '    <a class="btn" onclick="moveDown(this)">Move Down</a>\n' + '  </div>\n' + '  <a class="btn" onclick="addContact(this)">Add Contact</a>\n' + '  <a class="btn" onclick="deleteContact(this)">Delete</a>\n' + '  <a class="btn" onclick="moveUp(this)">Move Up</a>\n' + '  <a class="btn" onclick="moveDown(this)">Move Down</a>\n' + '</div>' + '<br /><button class="btn" id="build-contact-book" onclick="buildContactBookHTML()">Build HTML</button>';
          break;
        default:
          break;
      }
      document.getElementById("input-area").innerHTML = tempHTML;
    }
  });

  this.buildEvent = function(event) {
    var html, k, len, point, points, year;
    html = "<div class='event-entry champ-card'>";
    year = event.getElementsByTagName('h2')[0].innerHTML;
    html += '<input maxlength="4" value="' + year + '"><br /><br />';
    if (event.getElementsByTagName('img').length) {
      html += '<div><h3 style="float: left; margin-bottom: 0;">Image Address: </h3><input style="margin-bottom: 0" class="timeline-image"' + ' value="' + event.getElementsByTagName('img')[0].getAttribute('src') + '"><br />' + '<button style="clear: left; float: left; margin-top: 0" class="btn" onclick="deleteEvent(this)">Remove Image</button><br /><br /><br /></div>';
    }
    points = event.getElementsByTagName('p');
    for (k = 0, len = points.length; k < len; k++) {
      point = points[k];
      html += '<div><textarea>' + point.innerHTML + '</textarea>' + '<br /><button class="btn" onclick="newDetail(this)">Add</button>' + '<button class="btn" onclick="removeDetail(this)" style="margin-left: 5px;">Remove</button>' + '<button class="btn" onclick="moveUp(this)" style="margin-left: 5px;">Up</button>' + '<button class="btn" onclick="moveDown(this)" style="margin-left: 5px;">Down</button>' + '<br /><br /></div>';
    }
    html += '<button class="btn" onclick="addEvent(this)">Add Event</button>' + '<button class="btn" onclick="deleteEvent(this)" style="margin-left: 5px;">Remove Event</button>' + '<button class="btn" onclick="moveUp(this)" style="margin-left: 5px;">Up</button>' + '<button class="btn" onclick="moveDown(this)" style="margin-left: 5px;">Down</button>' + '<button class="btn" onclick="addImage(this)" style="margin-left: 5px;">Add Image</button>' + '</div>';
    return html;
  };

  this.moveUp = function(button) {
    var prevElement;
    prevElement = $(button.parentElement).prev();
    if ($(button.parentElement).prop("tagName") === $(prevElement).prop("tagName")) {
      $(button.parentElement).detach().insertBefore(prevElement);
    }
  };

  this.moveSectionUp = function(button) {
    var prevElement;
    prevElement = $(button.parentElement).prev();
    if ($(prevElement).hasClass('section-video')) {
      $(button.parentElement).detach().insertBefore(prevElement);
    }
  };

  this.moveDown = function(button) {
    var nextElement;
    nextElement = $(button.parentElement).next();
    if ($(button.parentElement).prop("tagName") === $(nextElement).prop("tagName")) {
      $(button.parentElement).detach().insertAfter(nextElement);
    }
  };

  this.addEvent = function(button) {
    $('<div class="event-entry champ-card">' + '<input maxlength="4"><br /><br />' + '<div><textarea></textarea><br />' + '<button class="btn" onclick="newDetail(this)">Add</button>' + '<button class="btn" onclick="removeDetail(this)" style="margin-left: 5px;">Remove</button>' + '<button class="btn" onclick="moveUp(this)" style="margin-left: 5px;">Up</button>' + '<button class="btn" onclick="moveDown(this)" style="margin-left: 5px;">Down</button>' + '<br /><br /></div>' + '<button class="btn" onclick="addEvent(this)">Add Event</button>' + '<button class="btn" onclick="deleteEvent(this)" style="margin-left: 5px;">Remove Event</button>' + '<button class="btn" onclick="moveUp(this)" style="margin-left: 5px;">Up</button>' + '<button class="btn" onclick="moveDown(this)" style="margin-left: 5px;">Down</button>' + '<button class="btn" onclick="addImage(this)" style="margin-left: 5px;">Add Image</button>' + '</div>').insertAfter(button.parentElement);
  };

  this.addImage = function(button) {
    if (!button.parentElement.getElementsByTagName('h3').length) {
      $('<div><h3 style="float: left; margin-bottom: 0;">Image Address: </h3><input style="margin-bottom: 0" class="timeline-image"><br />' + '<button style="clear: left; float: left; margin-top: 0" class="btn" onclick="deleteEvent(this)">Remove Image</button><br /><br /><br /></div>').insertAfter($(button.parentElement.getElementsByTagName('input')[0]).next().next());
    }
  };

  this.deleteEvent = function(button) {
    $(button.parentElement).remove();
  };

  this.newDetail = function(button) {
    $('<div><textarea></textarea><br />' + '<button class="btn" onclick="newDetail(this)">Add</button>' + '<button class="btn" onclick="removeDetail(this)" style="margin-left: 5px;">Remove</button>' + '<button class="btn" onclick="moveUp(this)" style="margin-left: 5px;">Up</button>' + '<button class="btn" onclick="moveDown(this)" style="margin-left: 5px;">Down</button>' + '<br /><br /></div>').insertAfter(button.parentElement);
  };

  this.removeDetail = function(button) {
    if (button.parentElement.parentElement.getElementsByTagName('textarea').length >= 2) {
      $(button.parentElement).remove();
    }
  };

  this.buildTimelineHTML = function() {
    var currentEvent, events, i, k, l, len, m, point, ref, ref1, ref2, tempHTML, timelineHTML;
    timelineHTML = document.getElementById("timeline-html");
    events = document.getElementsByClassName('event-entry');
    tempHTML = "<ol>";
    for (i = k = 0, ref = events.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
      currentEvent = events[i].getElementsByTagName('input')[0].value;
      if (!i) {
        tempHTML += '<li><a href="#0" data-date="01/01/' + currentEvent + '" class="selected">' + currentEvent + '</a></li>';
      } else {
        tempHTML += '<li><a href="#0" data-date="01/01/' + currentEvent + '">' + currentEvent + '</a></li>';
      }
    }
    tempHTML += '</ol><span class="filling-line" aria-hidden="true"></span>';
    timelineHTML.getElementsByClassName('events')[0].innerHTML = tempHTML;
    tempHTML = "";
    for (i = l = 0, ref1 = events.length; 0 <= ref1 ? l < ref1 : l > ref1; i = 0 <= ref1 ? ++l : --l) {
      currentEvent = events[i].getElementsByTagName('input')[0].value;
      if (!i) {
        tempHTML += '<li class="selected" data-date="01/01/' + currentEvent + '">';
      } else {
        tempHTML += '<li data-date="01/01/' + currentEvent + '">';
      }
      tempHTML += '<h2>' + currentEvent + '</h2>';
      if (events[i].getElementsByTagName('h3').length) {
        tempHTML += '<img src="' + events[i].getElementsByTagName('input')[1].value + '" style="width: 100%; height: auto;" /><br /><br />';
      }
      ref2 = events[i].getElementsByTagName('textarea');
      for (m = 0, len = ref2.length; m < len; m++) {
        point = ref2[m];
        tempHTML += '<p>' + point.value + '</p><br />';
      }
      tempHTML += '</li>';
    }
    timelineHTML.getElementsByClassName('events-content')[0].getElementsByTagName('ol')[0].innerHTML = tempHTML;
    $('<br /><br /><textarea id="output-html"></textarea>').insertAfter('#build-timeline');
    document.getElementById("output-html").value = timelineHTML.innerHTML;
  };

  this.buildContactBookHTML = function() {
    var btn, contact, contactHTML, contacts, detail, k, l, len, len1, len2, len3, line, link, m, n, ref, ref1, ref2, tempHTML;
    contactHTML = document.getElementById('contact-book-html');
    contacts = document.getElementsByClassName('container');
    tempHTML = '';
    for (k = 0, len = contacts.length; k < len; k++) {
      contact = contacts[k];
      tempHTML += '<div class="contact"> <p class="name">' + contact.getElementsByTagName('input')[0].value + '</p>';
      ref = contact.getElementsByClassName('detail');
      for (l = 0, len1 = ref.length; l < len1; l++) {
        detail = ref[l];
        tempHTML += '<div class="detail">';
        if (!detail.getElementsByClassName('detail-options')[0].getElementsByTagName('input')[0].checked) {
          tempHTML += '<p class="heading">' + detail.getElementsByClassName('heading-container')[0].getElementsByClassName('heading')[0].value + '</p>';
        }
        if (detail.getElementsByClassName('detail-options')[0].getElementsByTagName('input')[1].checked) {
          ref1 = detail.getElementsByClassName('link-container');
          for (m = 0, len2 = ref1.length; m < len2; m++) {
            link = ref1[m];
            tempHTML += '<a class="link" href="' + link.getElementsByTagName('input')[2].value + '" title="' + link.getElementsByTagName('input')[1].value + '">' + link.getElementsByTagName('input')[0].value + '</a>';
          }
        } else if (detail.getElementsByClassName('detail-options')[0].getElementsByTagName('input')[2].checked) {
          btn = detail.getElementsByClassName('btn-container')[0];
          tempHTML += '<a class="btn" href="' + btn.getElementsByTagName('input')[2].value + '" title="' + btn.getElementsByTagName('input')[1].value + '">' + btn.getElementsByTagName('input')[0].value + '</a>';
        } else {
          ref2 = detail.getElementsByClassName('line-container');
          for (n = 0, len3 = ref2.length; n < len3; n++) {
            line = ref2[n];
            tempHTML += '<p class="line">' + line.getElementsByTagName('input')[0].value + '</p>';
          }
        }
        tempHTML += '</div>';
      }
      tempHTML += '</div>';
    }
    contactHTML.getElementsByTagName('div')[4].innerHTML = tempHTML;
    $('<br /><br /><textarea id="output-html"></textarea>').insertAfter('#build-contact-book');
    return document.getElementById("output-html").value = contactHTML.innerHTML;
  };

  this.buildVideoHTML = function() {
    var entries, feats, featsConContent, htmlOutput, i, j, k, l, m, ref, sections, videoHTML;
    videoHTML = document.getElementById('video-page-html');
    feats = videoHTML.getElementsByClassName('video-feature')[0].getElementsByClassName('feat-objects');
    featsConContent = document.getElementsByClassName('feature-video')[0].getElementsByClassName('video-entry');
    for (i = k = 0; k < 4; i = ++k) {
      feats[i].innerHTML = '<p class="video-url">' + featsConContent[i].getElementsByClassName('video-url')[0].value + '</p>' + '<p class="thumbnail-url">' + featsConContent[i].getElementsByClassName('video-thumb-url')[0].value + '</p>' + '<p class="video-description">' + featsConContent[i].getElementsByClassName('video-description')[0].value + '</p>';
    }
    htmlOutput = videoHTML.innerHTML;
    sections = document.getElementsByClassName('section-video');
    for (i = l = 0, ref = sections.length; 0 <= ref ? l < ref : l > ref; i = 0 <= ref ? ++l : --l) {
      htmlOutput += '<div class="video-section champ-card">' + '<div class="section-panel-left">' + '<h2>' + sections[i].getElementsByClassName('section-title')[0].value + '</h2><br />' + '<div class="video-section-main video"></div>' + '</div>' + '<div class="section-panel-right"></div>';
      entries = sections[i].getElementsByClassName('video-entry');
      for (j = m = 0; m < 4; j = ++m) {
        htmlOutput += '<div class="video-section-object">' + '<p class="video-url-section">' + entries[j].getElementsByClassName('video-url')[0].value + '</p>' + '<p class="thumbnail-url-section">' + entries[j].getElementsByClassName('video-thumb-url')[0].value + '</p>' + '<p class="video-description-section">' + entries[j].getElementsByClassName('video-description')[0].value + '</p>' + '</div>';
      }
      htmlOutput += '</div><br /><br />';
    }
    $('<br /><br /><textarea id="output-html"></textarea>').insertAfter('#build-video');
    document.getElementById("output-html").value = htmlOutput;
  };

  this.buildContact = function(contact) {
    var detail, k, len, ref, tempHTML;
    tempHTML = '<div class="container champ-card" style="clear: both; width: 100%"> <h2 style="float: left">Contact Name:</h2> <input type="text" style="float: left; margin-top: -2px; width: 45%; margin-left: 7px; box-sizing: border-box; border: 2px solid #ccc; border-radius: 4px; font-size: 16px; background-color: white;padding: 7px;" maxlength="100" value="' + contact.getElementsByClassName('name')[0].innerHTML + '">';
    ref = contact.getElementsByClassName('detail');
    for (k = 0, len = ref.length; k < len; k++) {
      detail = ref[k];
      tempHTML += buildContactDetail(detail);
    }
    tempHTML += '<a class="btn" onclick="addContact(this)">Add Contact</a> <a class="btn" onclick="deleteContact(this)">Delete</a> <a class="btn" onclick="moveUp(this)">Move Up</a> <a class="btn" onclick="moveDown(this)">Move Down</a> </div>';
    return tempHTML;
  };

  this.buildContactDetail = function(detail) {
    var k, l, len, len1, line, link, ref, ref1, tempHTML;
    tempHTML = '<div class="detail champ-card" style="clear: both; position: relative">' + '  <div class="heading-container" style="width: 50%; float: left;">' + '     <h2 style="margin-top: 0;">' + '        Detail' + '     </h2>' + '     <h3 style="float: left; margin-top: 0;">' + '        Heading:' + '     </h3>';
    if (detail.getElementsByClassName('heading').length) {
      tempHTML += '<input type="text" class="heading" maxlength="18" style="float: left; margin-top: -2px; margin-left: 5px; width: 60%" value="' + detail.getElementsByClassName('heading')[0].innerHTML + '">';
    } else {
      tempHTML += '<input type="text" class="heading" maxlength="18" style="float: left; margin-top: -2px; margin-left: 5px; width: 60%" disabled>';
    }
    tempHTML += '</div>' + '<div class="detail-options" style="padding: 10px;">';
    if (detail.getElementsByClassName('heading').length) {
      tempHTML += '<input style="float: left" type="checkbox" onclick="noContactDetailHeading(this)"><p style="margin-top: -4px;">No Heading</p>';
    } else {
      tempHTML += '<input style="float: left" type="checkbox" onclick="noContactDetailHeading(this)" checked><p style="margin-top: -4px;">No Heading</p>';
    }
    if (detail.getElementsByClassName('link').length) {
      tempHTML += '<input style="float: left" type="checkbox" onclick="contactDetailIsLink(this)" checked><p style="margin-top: -4px;">Detail is Link</p> <input style="float: left" type="checkbox" onclick="contactDetailIsButton(this)" disabled><p style="margin-top: -4px;">Detail is Button</p>';
    } else if (detail.getElementsByClassName('btn').length) {
      tempHTML += '<input style="float: left" type="checkbox" onclick="contactDetailIsLink(this)" disabled><p style="margin-top: -4px;">Detail is Link</p> <input style="float: left" type="checkbox" onclick="contactDetailIsButton(this)" checked><p style="margin-top: -4px;">Detail is Button</p>';
    } else {
      tempHTML += '<input style="float: left" type="checkbox" onclick="contactDetailIsLink(this)"><p style="margin-top: -4px;">Detail is Link</p> <input style="float: left" type="checkbox" onclick="contactDetailIsButton(this)"><p style="margin-top: -4px;">Detail is Button</p>';
    }
    tempHTML += '</div>';
    if (detail.getElementsByClassName('line').length) {
      tempHTML += '<h3 class="line-header">Lines:</h3>';
      ref = detail.getElementsByClassName('line');
      for (k = 0, len = ref.length; k < len; k++) {
        line = ref[k];
        tempHTML += '<div class="line-container">' + '  <input type="text" maxlength="24" style="width: 45%; border: 1px solid lightgrey; box-sizing: border-box; border: 2px solid #ccc; border-radius: 4px; font-size: 16px; background-color: white;padding: 7px; margin-bottom: 5px;" class="line" value="' + line.innerHTML + '">' + '  <a class="btn" onclick="addContactDetailLine(this)">+</a>' + '  <a class="btn" onclick="deleteContactDetailLine(this)">−</a>' + '  <a class="btn" onclick="moveUp(this)">↑</a>' + '  <a class="btn" onclick="moveDown(this)">↓</a>' + '</div>';
      }
    } else if (detail.getElementsByClassName('link').length) {
      tempHTML += '<h3 class="line-header">Links:</h3>';
      ref1 = detail.getElementsByClassName('link');
      for (l = 0, len1 = ref1.length; l < len1; l++) {
        link = ref1[l];
        tempHTML += '<div class="link-container champ-card" style="width: 100%; position: relative;"> <div class="link-details" style="float: left; width: 90%"> <h3 style="margin-bottom: 0; margin-top: 0;">Link Name:</h3> <input type="text" maxlength="23" value="' + link.innerHTML + '"> <h3 style="margin-bottom: 0;">Link Description:</h3> <input type="text" value="' + link.title + '"> <h3 style="margin-bottom: 0;">Location (URL):</h3> <input type="text" value="' + link.href + '"> </div> <div class="link-controls" style="width: 10%; padding: 3%; float: right;"> <a class="btn" style="margin: 17%;" onclick="addContactDetailLink(this)">+</a> <a class="btn" style="margin: 17%;" onclick="deleteContactDetailLink(this)">−</a> <a class="btn" style="margin: 17%;" onclick="moveContactLinkUp(this)">↑</a> <a class="btn" style="margin: 17%;" onclick="moveContactLinkDown(this)">↓</a> </div> <p>* For email addresses preface location with mailto: as such mailto:example@champlain.edu</p> </div>';
      }
    } else if (detail.getElementsByClassName('btn').length) {
      tempHTML += '<div class="btn-container" style="width: 100%; position: relative;"> <h3 style="margin-bottom: 0; margin-top: 0;">Button Name:</h3> <input type="text" maxlength="18" value="' + detail.getElementsByClassName('btn')[0].innerHTML + '"> <h3 style="margin-bottom: 0;">Button Description:</h3> <input type="text" value="' + detail.getElementsByClassName('btn')[0].title + '"> <h3 style="margin-bottom: 0;">Location (URL):</h3> <input type="text" value="' + detail.getElementsByClassName('btn')[0].href + '"> <p>* Only one button per detail</p> </div>';
    }
    tempHTML += '  <p class="disclaimer">* Lines have a 24 character limit for styling purposes</p>' + '  <a class="btn" onclick="addContactDetail(this)">Add Detail</a>' + '  <a class="btn" onclick="deleteContactDetail(this)">Delete</a>' + '  <a class="btn" onclick="moveUp(this)">Move Up</a>' + '  <a class="btn" onclick="moveDown(this)">Move Down</a>' + '</div>';
    return tempHTML;
  };

  this.buildFeature = function(feature) {
    var descript, featurehtml, i, k, objects, thumb, vidurl;
    featurehtml = "<div style='height: 610px;' class='feature-video champ-card'><h2>Feature Video</h2>";
    objects = feature.getElementsByClassName('feat-objects');
    for (i = k = 0; k < 4; i = ++k) {
      if (!(i % 2)) {
        featurehtml += "<div style='float: left; margin: 15px; margin-left: 100px' class='video-entry champ-card'>";
      } else {
        featurehtml += "<div style='float: left; margin: 15px;' class='video-entry champ-card'>";
      }
      if (!i) {
        featurehtml += "<h3>Feature Video Main Video</h3>";
      } else {
        featurehtml += "<h3>Feature Video Preview " + i + "</h3>";
      }
      vidurl = objects[i].getElementsByClassName('video-url')[0].innerHTML;
      thumb = objects[i].getElementsByClassName('thumbnail-url')[0].innerHTML;
      descript = objects[i].getElementsByClassName('video-description')[0].innerHTML;
      featurehtml += "<p style='float: left'>URL:</p><input style='float: left' class='video-url' value='" + vidurl + "' /><br /><br />";
      featurehtml += "<p style='float: left; padding-bottom: 0;'>Thumbnail URL:</p><input style='float: left' class='video-thumb-url' value='" + thumb + "' /><br /><p style='float:left; font-size: 10px; margin-top:0;'>Note: Make sure thumbnail is 16:9</p><br /><br />";
      featurehtml += "<p style='float: left'>Description:</p><input style='float: left' class='video-description' maxlength='30' value='" + descript + "' />";
      featurehtml += "</div>";
      if (i % 2) {
        featurehtml += "<br /><br />";
      }
    }
    featurehtml += "<button style='float: left; margin-left: 20px; margin-top: 10px;' class='btn' onclick='addNewSection(this)'>Add Section</button></div>";
    return featurehtml;
  };

  this.buildSection = function(section) {
    var descript, i, k, objects, sectionhtml, thumb, vidurl;
    sectionhtml = "<div style='height: 650px;' class='section-video champ-card'><h2>Video Section</h2>";
    sectionhtml += "<p style='float: left'>Section Title</p><input style='float: left' class='section-title' value='" + section.getElementsByTagName('h2')[0].innerHTML + "' /><br /><br />";
    objects = section.getElementsByClassName('video-section-object');
    for (i = k = 0; k < 4; i = ++k) {
      if (!(i % 2)) {
        sectionhtml += "<div style='float: left; margin: 15px; margin-left: 100px' class='video-entry champ-card'>";
      } else {
        sectionhtml += "<div style='float: left; margin: 15px;' class='video-entry champ-card'>";
      }
      if (!i) {
        sectionhtml += "<h3>Section Video Main Video</h3>";
      } else {
        sectionhtml += "<h3>Section Video Preview " + i + "</h3>";
      }
      vidurl = objects[i].getElementsByClassName('video-url-section')[0].innerHTML;
      thumb = objects[i].getElementsByClassName('thumbnail-url-section')[0].innerHTML;
      descript = objects[i].getElementsByClassName('video-description-section')[0].innerHTML;
      sectionhtml += "<p style='float: left'>URL:</p><input style='float: left' class='video-url' value='" + vidurl + "' /><br /><br />";
      sectionhtml += "<p style='float: left; padding-bottom: 0;'>Thumbnail URL:</p><input style='float: left' class='video-thumb-url' value='" + thumb + "' /><br /><p style='float:left; font-size: 10px; margin-top:0;'>Note: Make sure thumbnail is 16:9</p><br /><br />";
      sectionhtml += "<p style='float: left'>Description:</p><input style='float: left' class='video-description' maxlength='30' value='" + descript + "' />";
      sectionhtml += "</div>";
      if (i % 2) {
        sectionhtml += "<br /><br />";
      }
    }
    sectionhtml += "<button style='float: left; margin-left: 20px; margin-top: 10px;' class='btn' onclick='addNewSection(this)'>Add Section</button>";
    sectionhtml += "<button style='float: left; margin-top: 10px; margin-left: 5px;' class='btn' onclick='deleteEvent(this)'>Remove Section</button>";
    sectionhtml += "<button style='float: left; margin-top: 10px; margin-left: 5px;' class='btn' onclick='moveSectionUp(this)'>Move Up</button>";
    sectionhtml += "<button style='float: left; margin-top: 10px; margin-left: 5px;' class='btn' onclick='moveDown(this)'>Move Down</button></div>";
    return sectionhtml;
  };

  this.addNewSection = function(button) {
    var i, k, sectionhtml;
    sectionhtml = "<div style='height: 650px;' class='section-video champ-card'><h2>Video Section</h2>";
    sectionhtml += "<p style='float: left'>Section Title</p><input style='float: left' class='section-title' /><br /><br />";
    for (i = k = 0; k < 4; i = ++k) {
      if (!(i % 2)) {
        sectionhtml += "<div style='float: left; margin: 15px; margin-left: 100px' class='video-entry champ-card'>";
      } else {
        sectionhtml += "<div style='float: left; margin: 15px;' class='video-entry champ-card'>";
      }
      if (!i) {
        sectionhtml += "<h3>Section Video Main Video</h3>";
      } else {
        sectionhtml += "<h3>Section Video Preview " + i + "</h3>";
      }
      sectionhtml += "<p style='float: left'>URL:</p><input style='float: left' class='video-url' /><br /><br />";
      sectionhtml += "<p style='float: left; padding-bottom: 0;'>Thumbnail URL:</p><input style='float: left' class='video-thumb-url' /><br /><p style='float:left; font-size: 10px; margin-top:0;'>Note: Make sure thumbnail is 16:9</p><br /><br />";
      sectionhtml += "<p style='float: left'>Description:</p><input style='float: left' class='video-description' maxlength='30' />";
      sectionhtml += "</div>";
      if (i % 2) {
        sectionhtml += "<br /><br />";
      }
    }
    sectionhtml += "<button style='float: left; margin-left: 20px; margin-top: 10px;' class='btn' onclick='addNewSection(this)'>Add Section</button>";
    sectionhtml += "<button style='float: left; margin-top: 10px; margin-left: 5px;' class='btn' onclick='deleteEvent(this)'>Remove Section</button>";
    sectionhtml += "<button style='float: left; margin-top: 10px; margin-left: 5px;' class='btn' onclick='moveSectionUp(this)'>Move Up</button>";
    sectionhtml += "<button style='float: left; margin-top: 10px; margin-left: 5px;' class='btn' onclick='moveDown(this)'>Move Down</button></div>";
    $(sectionhtml).insertAfter($(button.parentElement));
  };

  this.buildVertTimeline = function(container) {
    var events, i, j, k, l, points, ref, ref1, tempHTML;
    tempHTML = "";
    if (document.getElementsByClassName('vert-timeline-image').length) {
      tempHTML += '<br/><div><h3 style="float: left; margin-bottom: 0;">Image Address: </h3><input style="margin-bottom: 0; margin-top: 15px;" ' + 'value="' + document.getElementsByClassName('vert-timeline-image')[0].getAttribute('src') + '" class="timeline-image"><br />' + '<button style="clear: left; float: left; margin-top: 0" class="btn" onclick="removeCoverPhoto(this)">Remove Image</button><br /><br /></div>';
    } else {
      tempHTML += '<br/><button class="btn" onclick="addCoverPhoto(this)">Add Cover Photo</button><br/>';
    }
    events = container.getElementsByClassName('timeline-item');
    for (i = k = 0, ref = events.length; 0 <= ref ? k < ref : k > ref; i = 0 <= ref ? ++k : --k) {
      tempHTML += '<div class="event-element champ-card"><input class="event-element-header" type="text" value="' + events[i].getAttribute('data-year') + '"><br /><br />';
      points = events[i].getElementsByTagName('li');
      for (j = l = 0, ref1 = points.length; 0 <= ref1 ? l < ref1 : l > ref1; j = 0 <= ref1 ? ++l : --l) {
        tempHTML += '<div><textarea class="event-element-point">' + points[j].innerHTML + '</textarea>' + '<br/><button class="btn" style="margin-left: 5px" onclick="addElement(this)">Add Detail</button>' + '<button class="btn" style="margin-left: 5px" onclick="removeDetail(this)">Remove Detail</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveUp(this)">Move Up</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveDown(this)">Move Down</button>' + '<br/><br/></div>';
      }
      tempHTML += '<button class="btn" style="margin-left: 5px" onclick="addTimelineElement(this)">Add Event</button>' + '<button class="btn" style="margin-left: 5px" onclick="deleteEvent(this)">Remove Event</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveUp(this)">Move Up</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveDown(this)">Move Down</button></div>';
    }
    return tempHTML;
  };

  this.addCoverPhoto = function(button) {
    if (!button.parentElement.getElementsByTagName('h3').length) {
      $('<div><h3 style="float: left; margin-bottom: 0;">Image Address: </h3><input style="margin-bottom: 0; margin-top: 15px;" class="timeline-image"><br />' + '<button style="clear: left; float: left; margin-top: 0" class="btn" onclick="removeCoverPhoto(this)">Remove Image</button><br /><br /></div>').insertBefore(button);
      button.remove();
    }
  };

  this.removeCoverPhoto = function(button) {
    $('<button class="btn" onclick="addCoverPhoto(this)">Add Cover Photo</button>').insertBefore(button.parentElement);
    button.parentElement.remove();
  };

  this.addTimelineElement = function(button) {
    $('<div class="event-element champ-card"><input class="event-element-header" type="text"><br /><br />' + '<div><textarea class="event-element-point"></textarea>' + '<br/><button class="btn" style="margin-left: 5px" onclick="addElement(this)">Add Detail</button>' + '<button class="btn" style="margin-left: 5px" onclick="removeDetail(this)">Remove Detail</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveUp(this)">Move Up</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveDown(this)">Move Down</button>' + '<br/><br/></div>' + '<button class="btn" style="margin-left: 5px" onclick="addTimelineElement(this)">Add Event</button>' + '<button class="btn" style="margin-left: 5px" onclick="deleteEvent(this)">Remove Event</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveUp(this)">Move Up</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveDown(this)">Move Down</button></div>').insertAfter(button.parentElement);
  };

  this.addElement = function(button) {
    $('<div><textarea class="event-element-point"></textarea>' + '<br/><button class="btn" style="margin-left: 5px" onclick="addElement(this)">Add Detail</button>' + '<button class="btn" style="margin-left: 5px" onclick="removeDetail(this)">Remove Detail</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveUp(this)">Move Up</button>' + '<button class="btn" style="margin-left: 5px" onclick="moveDown(this)">Move Down</button>' + '<br/><br/></div>').insertAfter(button.parentElement);
  };

  this.buildVertTimelineHTML = function() {
    var event, events, k, l, len, len1, point, points, tempHTML;
    tempHTML = "";
    if (document.getElementsByClassName('timeline-image').length) {
      tempHTML += '<img style="width: 100%; height: auto;" class="vert-timeline-image" src="' + document.getElementsByClassName('timeline-image')[0].value + '" />';
    }
    tempHTML += '<div class="container">';
    events = document.getElementsByClassName('event-element');
    for (k = 0, len = events.length; k < len; k++) {
      event = events[k];
      tempHTML += '<div class="timeline-item" data-year="' + event.getElementsByClassName('event-element-header')[0].value + '">' + '<div class="time-card"><ul>';
      points = event.getElementsByClassName('event-element-point');
      for (l = 0, len1 = points.length; l < len1; l++) {
        point = points[l];
        tempHTML += '<li>' + point.value + '</li>';
      }
      tempHTML += '</ul></div></div>';
    }
    tempHTML += '</div>';
    $('<br /><br /><textarea id="output-html"></textarea>').insertAfter('#build-vert-timeline');
    document.getElementById("output-html").value = tempHTML;
  };

  this.noContactDetailHeading = function(checkbox) {
    checkbox.parentNode.parentNode.getElementsByClassName('heading-container')[0].getElementsByClassName('heading')[0].disabled = !checkbox.parentNode.parentNode.getElementsByClassName('heading-container')[0].getElementsByClassName('heading')[0].disabled;
  };

  this.addContactDetailLine = function(button) {
    $('<div class="line-container"> <input type="text" maxlength="24" style="width: 45%; border: 1px solid lightgrey; box-sizing: border-box; border: 2px solid #ccc; border-radius: 4px; font-size: 16px; background-color: white;padding: 7px; margin-bottom: 5px;" class="line"> <a class="btn" onclick="addContactDetailLine(this)">+</a> <a class="btn" onclick="deleteContactDetailLine(this)">−</a> <a class="btn" onclick="moveUp(this)">↑</a> <a class="btn" onclick="moveDown(this)">↓</a> </div>').insertAfter(button.parentNode);
  };

  this.deleteContactDetailLine = function(button) {
    if (button.parentNode.parentNode.getElementsByClassName('line-container').length - 1) {
      $(button.parentNode).remove();
    }
  };

  this.addContactDetail = function(button) {
    $('<div class="detail champ-card" style="clear: both; position: relative">' + '  <div class="heading-container" style="width: 50%; float: left;">' + '     <h2 style="margin-top: 0;">' + '        Detail' + '     </h2>' + '     <h3 style="float: left; margin-top: 0;">' + '        Heading:' + '     </h3>' + '     <input type="text" class="heading" maxlength="18" style="float: left; margin-top: -2px; margin-left: 5px; width: 60%">' + '  </div>' + '  <div class="detail-options" style="padding: 10px;">' + '     <input style="float: left" type="checkbox" onclick="noContactDetailHeading(this)"><p style="margin-top: -4px;">No Heading</p>' + '     <input style="float: left" type="checkbox" onclick="contactDetailIsLink(this)"><p style="margin-top: -4px;">Detail is Link</p>' + '     <input style="float: left" type="checkbox" onclick="contactDetailIsButton(this)"><p style="margin-top: -4px;">Detail is Button</p>' + '  </div>' + '  <h3 class="line-header">Lines:</h3>' + '  <div class="line-container">' + '     <input type="text" maxlength="24" style="width: 45%; border: 1px solid lightgrey; box-sizing: border-box; border: 2px solid #ccc; border-radius: 4px; font-size: 16px; background-color: white;padding: 7px; margin-bottom: 5px;" class="line">' + '     <a class="btn" onclick="addContactDetailLine(this)">+</a>' + '     <a class="btn" onclick="deleteContactDetailLine(this)">−</a>' + '     <a class="btn" onclick="moveUp(this)">↑</a>' + '     <a class="btn" onclick="moveDown(this)">↓</a>' + '  </div>' + '  <p class="disclaimer">* Lines have a 24 character limit for styling purposes</p>' + '  <a class="btn" onclick="addContactDetail(this)">Add Detail</a>' + '  <a class="btn" onclick="deleteContactDetail(this)">Delete</a>' + '  <a class="btn" onclick="moveUp(this)">Move Up</a>' + '  <a class="btn" onclick="moveDown(this)">Move Down</a>' + '</div>').insertAfter(button.parentNode);
  };

  this.deleteContactDetail = function(button) {
    if (button.parentNode.parentNode.getElementsByClassName('detail').length - 1) {
      $(button.parentNode).remove();
    }
  };

  this.addContact = function(button) {
    $('<div class="container champ-card" style="clear: both; width: 100%;">\n' + '  <h2 style="float: left;">\n' + '  Contact Name:\n' + '  </h2>\n' + '  <input type="text" style="float: left; margin-top: -2px; width: 45%; margin-left: 7px; box-sizing: border-box; border: 2px solid #ccc; border-radius: 4px; font-size: 16px; background-color: white;padding: 7px;" maxlength="100">\n' + '  <div class="detail champ-card" style="clear: both; position: relative">\n' + '    <div class="heading-container" style="width: 50%; float: left;">\n' + '      <h2 style="margin-top: 0;">\n' + '      Detail\n' + '      </h2>\n' + '      <h3 style="float: left; margin-top: 0;">\n' + '      Heading:\n' + '      </h3>\n' + '      <input type="text" class="heading" maxlength="18" style="float: left; margin-top: -2px; margin-left: 5px; width: 60%">\n' + '    </div>\n' + '    <div class="detail-options" style="padding: 10px;">\n' + '      <input style="float: left" type="checkbox" onclick="noContactDetailHeading(this)"><p style="margin-top: -4px;">No Heading</p>\n' + '      <input style="float: left" type="checkbox" onclick="contactDetailIsLink(this)"><p style="margin-top: -4px;">Detail is Link</p>\n' + '      <input style="float: left" type="checkbox" onclick="contactDetailIsButton(this)"><p style="margin-top: -4px;">Detail is Button</p>\n' + '    </div>\n' + '    <h3 class="line-header">Lines:</h3>\n' + '    <div class="line-container">\n' + '      <input type="text" maxlength="24" style="width: 45%; border: 1px solid lightgrey; box-sizing: border-box; border: 2px solid #ccc; border-radius: 4px; font-size: 16px; background-color: white;padding: 7px; margin-bottom: 5px;" class="line">\n' + '      <a class="btn" onclick="addContactDetailLine(this)">+</a>\n' + '      <a class="btn" onclick="deleteContactDetailLine(this)">−</a>\n' + '      <a class="btn" onclick="moveUp(this)">↑</a>\n' + '      <a class="btn" onclick="moveDown(this)">↓</a>\n' + '    </div> \n' + '    <p class="disclaimer">* Lines have a 24 character limit for styling purposes</p>' + '    <a class="btn" onclick="addContactDetail(this)">Add Detail</a>\n' + '    <a class="btn" onclick="deleteContactDetail(this)">Delete</a>\n' + '    <a class="btn" onclick="moveUp(this)">Move Up</a>\n' + '    <a class="btn" onclick="moveDown(this)">Move Down</a>\n' + '  </div>\n' + '  <a class="btn" onclick="addContact(this)">Add Contact</a>\n' + '  <a class="btn" onclick="deleteContact(this)">Delete</a>\n' + '  <a class="btn" onclick="moveUp(this)">Move Up</a>\n' + '  <a class="btn" onclick="moveDown(this)">Move Down</a>\n' + '</div>').insertAfter(button.parentNode);
  };

  this.deleteContact = function(button) {
    if (button.parentNode.parentNode.getElementsByClassName('container').length - 1) {
      $(button.parentNode).remove();
    }
  };

  this.contactDetailIsLink = function(button) {
    if (button.checked) {
      $(button.parentNode.parentNode.getElementsByClassName('line-container')).remove();
      button.parentNode.getElementsByTagName('input')[2].disabled = true;
      button.parentNode.parentNode.getElementsByClassName('line-header')[0].innerHTML = 'Links:';
      $('<div class="link-container champ-card" style="width: 100%; position: relative;"> <div class="link-details" style="float: left; width: 90%"> <h3 style="margin-bottom: 0; margin-top: 0;">Link Name:</h3> <input type="text" maxlength="23"> <h3 style="margin-bottom: 0;">Link Description:</h3> <input type="text"> <h3 style="margin-bottom: 0;">Location (URL):</h3> <input type="text"> </div> <div class="link-controls" style="width: 10%; padding: 3%; float: right;"> <a class="btn" style="margin: 17%;" onclick="addContactDetailLink(this)">+</a> <a class="btn" style="margin: 17%;" onclick="deleteContactDetailLink(this)">−</a> <a class="btn" style="margin: 17%;" onclick="moveContactLinkUp(this)">↑</a> <a class="btn" style="margin: 17%;" onclick="moveContactLinkDown(this)">↓</a> </div> <p>* For email addresses preface location with mailto: as such mailto:example@champlain.edu</p> </div>').insertAfter(button.parentNode.parentNode.getElementsByClassName('line-header')[0]);
    } else {
      $(button.parentNode.parentNode.getElementsByClassName('link-container')).remove();
      button.parentNode.getElementsByTagName('input')[2].disabled = false;
      button.parentNode.parentNode.getElementsByClassName('line-header')[0].innerHTML = 'Lines:';
      $('<div class="line-container"> <input type="text" maxlength="24" style="width: 45%; border: 1px solid lightgrey; box-sizing: border-box; border: 2px solid #ccc; border-radius: 4px; font-size: 16px; background-color: white;padding: 7px; margin-bottom: 5px;" class="line"> <a class="btn" onclick="addContactDetailLine(this)">+</a> <a class="btn" onclick="deleteContactDetailLine(this)">−</a> <a class="btn" onclick="moveUp(this)">↑</a> <a class="btn" onclick="moveDown(this)">↓</a> </div>').insertAfter(button.parentNode.parentNode.getElementsByClassName('line-header')[0]);
    }
  };

  this.addContactDetailLink = function(button) {
    $('<div class="link-container champ-card" style="width: 100%; position: relative;"> <div class="link-details" style="float: left; width: 90%"> <h3 style="margin-bottom: 0; margin-top: 0;">Link Name:</h3> <input type="text" maxlength="23"> <h3 style="margin-bottom: 0;">Link Description:</h3> <input type="text"> <h3 style="margin-bottom: 0;">Location (URL):</h3> <input type="text"> </div> <div class="link-controls" style="width: 10%; padding: 3%; float: right;"> <a class="btn" style="margin: 17%;" onclick="addContactDetailLink(this)">+</a> <a class="btn" style="margin: 17%;" onclick="deleteContactDetailLink(this)">−</a> <a class="btn" style="margin: 17%;" onclick="moveContactLinkUp(this)">↑</a> <a class="btn" style="margin: 17%;" onclick="moveContactLinkDown(this)">↓</a> </div> <p>* For email addresses preface location with mailto: as such mailto:example@champlain.edu</p> </div>').insertAfter(button.parentNode.parentNode);
  };

  this.deleteContactDetailLink = function(button) {
    if (button.parentNode.parentNode.parentNode.getElementsByClassName('link-container').length - 1) {
      $(button.parentNode.parentNode).remove();
    }
  };

  this.moveContactLinkUp = function(button) {
    var prevElement;
    prevElement = $(button.parentElement.parentElement).prev();
    if ($(button.parentElement.parentElement).prop("tagName") === $(prevElement).prop("tagName")) {
      $(button.parentElement.parentElement).detach().insertBefore(prevElement);
    }
  };

  this.moveContactLinkDown = function(button) {
    var nextElement;
    nextElement = $(button.parentElement.parentElement).next();
    if ($(button.parentElement.parentElement).prop("tagName") === $(nextElement).prop("tagName")) {
      $(button.parentElement.parentElement).detach().insertAfter(nextElement);
    }
  };

  this.contactDetailIsButton = function(button) {
    console.log(button);
    if (button.checked) {
      $(button.parentNode.parentNode.getElementsByClassName('line-container')).remove();
      button.parentNode.getElementsByTagName('input')[1].disabled = true;
      button.parentNode.parentNode.getElementsByClassName('line-header')[0].innerHTML = 'Button:';
      $('<div class="btn-container" style="width: 100%; position: relative;"> <h3 style="margin-bottom: 0; margin-top: 0;">Button Name:</h3> <input type="text" maxlength="18"> <h3 style="margin-bottom: 0;">Button Description:</h3> <input type="text"> <h3 style="margin-bottom: 0;">Location (URL):</h3> <input type="text"> <p>* Only one button per detail</p> </div>').insertAfter(button.parentNode.parentNode.getElementsByClassName('line-header')[0]);
    } else {
      $(button.parentNode.parentNode.getElementsByClassName('btn-container')).remove();
      button.parentNode.getElementsByTagName('input')[1].disabled = false;
      button.parentNode.parentNode.getElementsByClassName('line-header')[0].innerHTML = 'Lines:';
      $('<div class="line-container"> <input type="text" maxlength="24" style="width: 45%; border: 1px solid lightgrey; box-sizing: border-box; border: 2px solid #ccc; border-radius: 4px; font-size: 16px; background-color: white;padding: 7px; margin-bottom: 5px;" class="line"> <a class="btn" onclick="addContactDetailLine(this)">+</a> <a class="btn" onclick="deleteContactDetailLine(this)">−</a> <a class="btn" onclick="moveUp(this)">↑</a> <a class="btn" onclick="moveDown(this)">↓</a> </div>').insertAfter(button.parentNode.parentNode.getElementsByClassName('line-header')[0]);
    }
  };

}).call(this);

//# sourceMappingURL=ace-innovations.js.map
